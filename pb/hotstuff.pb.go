// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: pb/hotstuff.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*Msg_Prepare
	//	*Msg_PrepareVote
	//	*Msg_PreCommit
	//	*Msg_PreCommitVote
	//	*Msg_Commit
	//	*Msg_CommitVote
	//	*Msg_Decide
	//	*Msg_NewView
	//	*Msg_Request
	//	*Msg_Reply
	Payload isMsg_Payload `protobuf_oneof:"Payload"`
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{0}
}

func (m *Msg) GetPayload() isMsg_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Msg) GetPrepare() *Prepare {
	if x, ok := x.GetPayload().(*Msg_Prepare); ok {
		return x.Prepare
	}
	return nil
}

func (x *Msg) GetPrepareVote() *PrepareVote {
	if x, ok := x.GetPayload().(*Msg_PrepareVote); ok {
		return x.PrepareVote
	}
	return nil
}

func (x *Msg) GetPreCommit() *PreCommit {
	if x, ok := x.GetPayload().(*Msg_PreCommit); ok {
		return x.PreCommit
	}
	return nil
}

func (x *Msg) GetPreCommitVote() *PreCommitVote {
	if x, ok := x.GetPayload().(*Msg_PreCommitVote); ok {
		return x.PreCommitVote
	}
	return nil
}

func (x *Msg) GetCommit() *Commit {
	if x, ok := x.GetPayload().(*Msg_Commit); ok {
		return x.Commit
	}
	return nil
}

func (x *Msg) GetCommitVote() *CommitVote {
	if x, ok := x.GetPayload().(*Msg_CommitVote); ok {
		return x.CommitVote
	}
	return nil
}

func (x *Msg) GetDecide() *Decide {
	if x, ok := x.GetPayload().(*Msg_Decide); ok {
		return x.Decide
	}
	return nil
}

func (x *Msg) GetNewView() *NewView {
	if x, ok := x.GetPayload().(*Msg_NewView); ok {
		return x.NewView
	}
	return nil
}

func (x *Msg) GetRequest() *Request {
	if x, ok := x.GetPayload().(*Msg_Request); ok {
		return x.Request
	}
	return nil
}

func (x *Msg) GetReply() *Reply {
	if x, ok := x.GetPayload().(*Msg_Reply); ok {
		return x.Reply
	}
	return nil
}

type isMsg_Payload interface {
	isMsg_Payload()
}

type Msg_Prepare struct {
	Prepare *Prepare `protobuf:"bytes,1,opt,name=prepare,proto3,oneof"`
}

type Msg_PrepareVote struct {
	PrepareVote *PrepareVote `protobuf:"bytes,2,opt,name=prepareVote,proto3,oneof"`
}

type Msg_PreCommit struct {
	PreCommit *PreCommit `protobuf:"bytes,3,opt,name=preCommit,proto3,oneof"`
}

type Msg_PreCommitVote struct {
	PreCommitVote *PreCommitVote `protobuf:"bytes,4,opt,name=preCommitVote,proto3,oneof"`
}

type Msg_Commit struct {
	Commit *Commit `protobuf:"bytes,5,opt,name=commit,proto3,oneof"`
}

type Msg_CommitVote struct {
	CommitVote *CommitVote `protobuf:"bytes,6,opt,name=commitVote,proto3,oneof"`
}

type Msg_Decide struct {
	Decide *Decide `protobuf:"bytes,7,opt,name=decide,proto3,oneof"`
}

type Msg_NewView struct {
	NewView *NewView `protobuf:"bytes,8,opt,name=newView,proto3,oneof"`
}

type Msg_Request struct {
	Request *Request `protobuf:"bytes,9,opt,name=request,proto3,oneof"`
}

type Msg_Reply struct {
	Reply *Reply `protobuf:"bytes,10,opt,name=reply,proto3,oneof"`
}

func (*Msg_Prepare) isMsg_Payload() {}

func (*Msg_PrepareVote) isMsg_Payload() {}

func (*Msg_PreCommit) isMsg_Payload() {}

func (*Msg_PreCommitVote) isMsg_Payload() {}

func (*Msg_Commit) isMsg_Payload() {}

func (*Msg_CommitVote) isMsg_Payload() {}

func (*Msg_Decide) isMsg_Payload() {}

func (*Msg_NewView) isMsg_Payload() {}

func (*Msg_Request) isMsg_Payload() {}

func (*Msg_Reply) isMsg_Payload() {}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurProposal *WhirlyBlock `protobuf:"bytes,1,opt,name=curProposal,proto3" json:"curProposal,omitempty"`
	HighQC      *QuorumCert  `protobuf:"bytes,2,opt,name=highQC,proto3" json:"highQC,omitempty"`
	ViewNum     uint64       `protobuf:"varint,3,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{1}
}

func (x *Prepare) GetCurProposal() *WhirlyBlock {
	if x != nil {
		return x.CurProposal
	}
	return nil
}

func (x *Prepare) GetHighQC() *QuorumCert {
	if x != nil {
		return x.HighQC
	}
	return nil
}

func (x *Prepare) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type PrepareVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash  []byte      `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Qc         *QuorumCert `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	PartialSig []byte      `protobuf:"bytes,3,opt,name=partialSig,proto3" json:"partialSig,omitempty"`
	ViewNum    uint64      `protobuf:"varint,4,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *PrepareVote) Reset() {
	*x = PrepareVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareVote) ProtoMessage() {}

func (x *PrepareVote) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareVote.ProtoReflect.Descriptor instead.
func (*PrepareVote) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{2}
}

func (x *PrepareVote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PrepareVote) GetQc() *QuorumCert {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *PrepareVote) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

func (x *PrepareVote) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type PreCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepareQC *QuorumCert `protobuf:"bytes,1,opt,name=prepareQC,proto3" json:"prepareQC,omitempty"`
	ViewNum   uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *PreCommit) Reset() {
	*x = PreCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommit) ProtoMessage() {}

func (x *PreCommit) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommit.ProtoReflect.Descriptor instead.
func (*PreCommit) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{3}
}

func (x *PreCommit) GetPrepareQC() *QuorumCert {
	if x != nil {
		return x.PrepareQC
	}
	return nil
}

func (x *PreCommit) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type PreCommitVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash  []byte      `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Qc         *QuorumCert `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	PartialSig []byte      `protobuf:"bytes,3,opt,name=partialSig,proto3" json:"partialSig,omitempty"`
	ViewNum    uint64      `protobuf:"varint,4,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *PreCommitVote) Reset() {
	*x = PreCommitVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreCommitVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreCommitVote) ProtoMessage() {}

func (x *PreCommitVote) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreCommitVote.ProtoReflect.Descriptor instead.
func (*PreCommitVote) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{4}
}

func (x *PreCommitVote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PreCommitVote) GetQc() *QuorumCert {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *PreCommitVote) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

func (x *PreCommitVote) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreCommitQC *QuorumCert `protobuf:"bytes,1,opt,name=preCommitQC,proto3" json:"preCommitQC,omitempty"`
	ViewNum     uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{5}
}

func (x *Commit) GetPreCommitQC() *QuorumCert {
	if x != nil {
		return x.PreCommitQC
	}
	return nil
}

func (x *Commit) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type CommitVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash  []byte      `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Qc         *QuorumCert `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	PartialSig []byte      `protobuf:"bytes,3,opt,name=partialSig,proto3" json:"partialSig,omitempty"`
	ViewNum    uint64      `protobuf:"varint,4,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *CommitVote) Reset() {
	*x = CommitVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitVote) ProtoMessage() {}

func (x *CommitVote) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitVote.ProtoReflect.Descriptor instead.
func (*CommitVote) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{6}
}

func (x *CommitVote) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *CommitVote) GetQc() *QuorumCert {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *CommitVote) GetPartialSig() []byte {
	if x != nil {
		return x.PartialSig
	}
	return nil
}

func (x *CommitVote) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type Decide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitQC *QuorumCert `protobuf:"bytes,1,opt,name=commitQC,proto3" json:"commitQC,omitempty"`
	ViewNum  uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *Decide) Reset() {
	*x = Decide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Decide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decide) ProtoMessage() {}

func (x *Decide) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decide.ProtoReflect.Descriptor instead.
func (*Decide) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{7}
}

func (x *Decide) GetCommitQC() *QuorumCert {
	if x != nil {
		return x.CommitQC
	}
	return nil
}

func (x *Decide) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

type NewView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrepareQC *QuorumCert `protobuf:"bytes,1,opt,name=prepareQC,proto3" json:"prepareQC,omitempty"`
	ViewNum   uint64      `protobuf:"varint,2,opt,name=viewNum,proto3" json:"viewNum,omitempty"`
}

func (x *NewView) Reset() {
	*x = NewView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_hotstuff_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewView) ProtoMessage() {}

func (x *NewView) ProtoReflect() protoreflect.Message {
	mi := &file_pb_hotstuff_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewView.ProtoReflect.Descriptor instead.
func (*NewView) Descriptor() ([]byte, []int) {
	return file_pb_hotstuff_proto_rawDescGZIP(), []int{8}
}

func (x *NewView) GetPrepareQC() *QuorumCert {
	if x != nil {
		return x.PrepareQC
	}
	return nil
}

func (x *NewView) GetViewNum() uint64 {
	if x != nil {
		return x.ViewNum
	}
	return 0
}

var File_pb_hotstuff_proto protoreflect.FileDescriptor

var file_pb_hotstuff_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x62, 0x2f, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x03, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x27, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x2d,
	0x0a, 0x09, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x39, 0x0a,
	0x0d, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x30,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x48, 0x00, 0x52, 0x06,
	0x64, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77,
	0x56, 0x69, 0x65, 0x77, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x27, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x7e, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x68, 0x69, 0x72,
	0x6c, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x06, 0x68, 0x69, 0x67, 0x68, 0x51, 0x43, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x06, 0x68, 0x69, 0x67, 0x68, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76,
	0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x02, 0x71, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74,
	0x52, 0x02, 0x71, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x53,
	0x0a, 0x09, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65,
	0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77,
	0x4e, 0x75, 0x6d, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x02, 0x71, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52,
	0x02, 0x71, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x53, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x54, 0x0a,
	0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x0b, 0x70, 0x72,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65,
	0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77,
	0x4e, 0x75, 0x6d, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x6f,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1e, 0x0a, 0x02, 0x71, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x02, 0x71, 0x63,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x4e, 0x0a, 0x06, 0x44, 0x65,
	0x63, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x51, 0x43,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72,
	0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x51, 0x43,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x22, 0x51, 0x0a, 0x07, 0x4e, 0x65,
	0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x51, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x09, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_hotstuff_proto_rawDescOnce sync.Once
	file_pb_hotstuff_proto_rawDescData = file_pb_hotstuff_proto_rawDesc
)

func file_pb_hotstuff_proto_rawDescGZIP() []byte {
	file_pb_hotstuff_proto_rawDescOnce.Do(func() {
		file_pb_hotstuff_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_hotstuff_proto_rawDescData)
	})
	return file_pb_hotstuff_proto_rawDescData
}

var file_pb_hotstuff_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pb_hotstuff_proto_goTypes = []interface{}{
	(*Msg)(nil),           // 0: pb.Msg
	(*Prepare)(nil),       // 1: pb.Prepare
	(*PrepareVote)(nil),   // 2: pb.PrepareVote
	(*PreCommit)(nil),     // 3: pb.PreCommit
	(*PreCommitVote)(nil), // 4: pb.PreCommitVote
	(*Commit)(nil),        // 5: pb.Commit
	(*CommitVote)(nil),    // 6: pb.CommitVote
	(*Decide)(nil),        // 7: pb.Decide
	(*NewView)(nil),       // 8: pb.NewView
	(*Request)(nil),       // 9: pb.Request
	(*Reply)(nil),         // 10: pb.Reply
	(*WhirlyBlock)(nil),   // 11: pb.WhirlyBlock
	(*QuorumCert)(nil),    // 12: pb.QuorumCert
}
var file_pb_hotstuff_proto_depIdxs = []int32{
	1,  // 0: pb.Msg.prepare:type_name -> pb.Prepare
	2,  // 1: pb.Msg.prepareVote:type_name -> pb.PrepareVote
	3,  // 2: pb.Msg.preCommit:type_name -> pb.PreCommit
	4,  // 3: pb.Msg.preCommitVote:type_name -> pb.PreCommitVote
	5,  // 4: pb.Msg.commit:type_name -> pb.Commit
	6,  // 5: pb.Msg.commitVote:type_name -> pb.CommitVote
	7,  // 6: pb.Msg.decide:type_name -> pb.Decide
	8,  // 7: pb.Msg.newView:type_name -> pb.NewView
	9,  // 8: pb.Msg.request:type_name -> pb.Request
	10, // 9: pb.Msg.reply:type_name -> pb.Reply
	11, // 10: pb.Prepare.curProposal:type_name -> pb.WhirlyBlock
	12, // 11: pb.Prepare.highQC:type_name -> pb.QuorumCert
	12, // 12: pb.PrepareVote.qc:type_name -> pb.QuorumCert
	12, // 13: pb.PreCommit.prepareQC:type_name -> pb.QuorumCert
	12, // 14: pb.PreCommitVote.qc:type_name -> pb.QuorumCert
	12, // 15: pb.Commit.preCommitQC:type_name -> pb.QuorumCert
	12, // 16: pb.CommitVote.qc:type_name -> pb.QuorumCert
	12, // 17: pb.Decide.commitQC:type_name -> pb.QuorumCert
	12, // 18: pb.NewView.prepareQC:type_name -> pb.QuorumCert
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_pb_hotstuff_proto_init() }
func file_pb_hotstuff_proto_init() {
	if File_pb_hotstuff_proto != nil {
		return
	}
	file_pb_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_hotstuff_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreCommitVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Decide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_hotstuff_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_hotstuff_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Msg_Prepare)(nil),
		(*Msg_PrepareVote)(nil),
		(*Msg_PreCommit)(nil),
		(*Msg_PreCommitVote)(nil),
		(*Msg_Commit)(nil),
		(*Msg_CommitVote)(nil),
		(*Msg_Decide)(nil),
		(*Msg_NewView)(nil),
		(*Msg_Request)(nil),
		(*Msg_Reply)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_hotstuff_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_hotstuff_proto_goTypes,
		DependencyIndexes: file_pb_hotstuff_proto_depIdxs,
		MessageInfos:      file_pb_hotstuff_proto_msgTypes,
	}.Build()
	File_pb_hotstuff_proto = out.File
	file_pb_hotstuff_proto_rawDesc = nil
	file_pb_hotstuff_proto_goTypes = nil
	file_pb_hotstuff_proto_depIdxs = nil
}
