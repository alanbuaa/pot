// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: pb/crypto.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SRS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SRSBytes []byte `protobuf:"bytes,1,opt,name=SRSBytes,proto3" json:"SRSBytes,omitempty"`
}

func (x *SRS) Reset() {
	*x = SRS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRS) ProtoMessage() {}

func (x *SRS) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRS.ProtoReflect.Descriptor instead.
func (*SRS) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *SRS) GetSRSBytes() []byte {
	if x != nil {
		return x.SRSBytes
	}
	return nil
}

type PointG1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointbytes []byte `protobuf:"bytes,1,opt,name=Pointbytes,proto3" json:"Pointbytes,omitempty"`
}

func (x *PointG1) Reset() {
	*x = PointG1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointG1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointG1) ProtoMessage() {}

func (x *PointG1) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointG1.ProtoReflect.Descriptor instead.
func (*PointG1) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{1}
}

func (x *PointG1) GetPointbytes() []byte {
	if x != nil {
		return x.Pointbytes
	}
	return nil
}

type EncShare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sharebytes []byte `protobuf:"bytes,1,opt,name=Sharebytes,proto3" json:"Sharebytes,omitempty"`
}

func (x *EncShare) Reset() {
	*x = EncShare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncShare) ProtoMessage() {}

func (x *EncShare) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncShare.ProtoReflect.Descriptor instead.
func (*EncShare) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{2}
}

func (x *EncShare) GetSharebytes() []byte {
	if x != nil {
		return x.Sharebytes
	}
	return nil
}

type SchnorrProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SchnorrProof) Reset() {
	*x = SchnorrProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrProof) ProtoMessage() {}

func (x *SchnorrProof) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrProof.ProtoReflect.Descriptor instead.
func (*SchnorrProof) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{3}
}

type DrawProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DrawProof) Reset() {
	*x = DrawProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawProof) ProtoMessage() {}

func (x *DrawProof) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawProof.ProtoReflect.Descriptor instead.
func (*DrawProof) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{4}
}

type PointG1List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointG1S []*PointG1 `protobuf:"bytes,1,rep,name=PointG1s,proto3" json:"PointG1s,omitempty"`
}

func (x *PointG1List) Reset() {
	*x = PointG1List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointG1List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointG1List) ProtoMessage() {}

func (x *PointG1List) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointG1List.ProtoReflect.Descriptor instead.
func (*PointG1List) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{5}
}

func (x *PointG1List) GetPointG1S() []*PointG1 {
	if x != nil {
		return x.PointG1S
	}
	return nil
}

type EncShareList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncShares []*EncShare `protobuf:"bytes,1,rep,name=EncShares,proto3" json:"EncShares,omitempty"`
}

func (x *EncShareList) Reset() {
	*x = EncShareList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncShareList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncShareList) ProtoMessage() {}

func (x *EncShareList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncShareList.ProtoReflect.Descriptor instead.
func (*EncShareList) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{6}
}

func (x *EncShareList) GetEncShares() []*EncShare {
	if x != nil {
		return x.EncShares
	}
	return nil
}

type CryptoElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SRS                     []byte          `protobuf:"bytes,1,opt,name=SRS,proto3" json:"SRS,omitempty"`
	HolderPKLists           []*PointG1List  `protobuf:"bytes,2,rep,name=HolderPKLists,proto3" json:"HolderPKLists,omitempty"`
	ShareCommitLists        []*PointG1List  `protobuf:"bytes,3,rep,name=ShareCommitLists,proto3" json:"ShareCommitLists,omitempty"`
	CoeffCommitLists        []*PointG1List  `protobuf:"bytes,4,rep,name=CoeffCommitLists,proto3" json:"CoeffCommitLists,omitempty"`
	EncSharesLists          []*EncShareList `protobuf:"bytes,5,rep,name=EncSharesLists,proto3" json:"EncSharesLists,omitempty"`
	CommitteePKLists        []*PointG1      `protobuf:"bytes,6,rep,name=CommitteePKLists,proto3" json:"CommitteePKLists,omitempty"`
	SrsUpdateProof          []byte          `protobuf:"bytes,7,opt,name=SrsUpdateProof,proto3" json:"SrsUpdateProof,omitempty"`
	ShuffleProof            []byte          `protobuf:"bytes,8,opt,name=ShuffleProof,proto3" json:"ShuffleProof,omitempty"`
	DrawProof               []byte          `protobuf:"bytes,9,opt,name=DrawProof,proto3" json:"DrawProof,omitempty"`
	CommitteeWorkHeightList []uint64        `protobuf:"varint,10,rep,packed,name=CommitteeWorkHeightList,proto3" json:"CommitteeWorkHeightList,omitempty"`
}

func (x *CryptoElement) Reset() {
	*x = CryptoElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_crypto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CryptoElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoElement) ProtoMessage() {}

func (x *CryptoElement) ProtoReflect() protoreflect.Message {
	mi := &file_pb_crypto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoElement.ProtoReflect.Descriptor instead.
func (*CryptoElement) Descriptor() ([]byte, []int) {
	return file_pb_crypto_proto_rawDescGZIP(), []int{7}
}

func (x *CryptoElement) GetSRS() []byte {
	if x != nil {
		return x.SRS
	}
	return nil
}

func (x *CryptoElement) GetHolderPKLists() []*PointG1List {
	if x != nil {
		return x.HolderPKLists
	}
	return nil
}

func (x *CryptoElement) GetShareCommitLists() []*PointG1List {
	if x != nil {
		return x.ShareCommitLists
	}
	return nil
}

func (x *CryptoElement) GetCoeffCommitLists() []*PointG1List {
	if x != nil {
		return x.CoeffCommitLists
	}
	return nil
}

func (x *CryptoElement) GetEncSharesLists() []*EncShareList {
	if x != nil {
		return x.EncSharesLists
	}
	return nil
}

func (x *CryptoElement) GetCommitteePKLists() []*PointG1 {
	if x != nil {
		return x.CommitteePKLists
	}
	return nil
}

func (x *CryptoElement) GetSrsUpdateProof() []byte {
	if x != nil {
		return x.SrsUpdateProof
	}
	return nil
}

func (x *CryptoElement) GetShuffleProof() []byte {
	if x != nil {
		return x.ShuffleProof
	}
	return nil
}

func (x *CryptoElement) GetDrawProof() []byte {
	if x != nil {
		return x.DrawProof
	}
	return nil
}

func (x *CryptoElement) GetCommitteeWorkHeightList() []uint64 {
	if x != nil {
		return x.CommitteeWorkHeightList
	}
	return nil
}

var File_pb_crypto_proto protoreflect.FileDescriptor

var file_pb_crypto_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x21, 0x0a, 0x03, 0x53, 0x52, 0x53, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x52, 0x53, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x53, 0x52, 0x53, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x07, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x47, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x08, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x0e, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22,
	0x0b, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x36, 0x0a, 0x0b,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x31, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x31, 0x52, 0x08, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x47, 0x31, 0x73, 0x22, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x09, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x22, 0xe9, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x52, 0x53, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x53, 0x52, 0x53, 0x12, 0x35, 0x0a, 0x0d, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x4b,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x50, 0x4b, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x10, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x47, 0x31, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x10, 0x43, 0x6f, 0x65, 0x66,
	0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x31, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x10, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0e, 0x45, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x37, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x50, 0x4b, 0x4c, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x31, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x65, 0x50, 0x4b, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x72, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x53, 0x72, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x22, 0x0a, 0x0c, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x53, 0x68, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x44, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_crypto_proto_rawDescOnce sync.Once
	file_pb_crypto_proto_rawDescData = file_pb_crypto_proto_rawDesc
)

func file_pb_crypto_proto_rawDescGZIP() []byte {
	file_pb_crypto_proto_rawDescOnce.Do(func() {
		file_pb_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_crypto_proto_rawDescData)
	})
	return file_pb_crypto_proto_rawDescData
}

var file_pb_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pb_crypto_proto_goTypes = []interface{}{
	(*SRS)(nil),           // 0: pb.SRS
	(*PointG1)(nil),       // 1: pb.PointG1
	(*EncShare)(nil),      // 2: pb.EncShare
	(*SchnorrProof)(nil),  // 3: pb.SchnorrProof
	(*DrawProof)(nil),     // 4: pb.DrawProof
	(*PointG1List)(nil),   // 5: pb.PointG1List
	(*EncShareList)(nil),  // 6: pb.EncShareList
	(*CryptoElement)(nil), // 7: pb.CryptoElement
}
var file_pb_crypto_proto_depIdxs = []int32{
	1, // 0: pb.PointG1List.PointG1s:type_name -> pb.PointG1
	2, // 1: pb.EncShareList.EncShares:type_name -> pb.EncShare
	5, // 2: pb.CryptoElement.HolderPKLists:type_name -> pb.PointG1List
	5, // 3: pb.CryptoElement.ShareCommitLists:type_name -> pb.PointG1List
	5, // 4: pb.CryptoElement.CoeffCommitLists:type_name -> pb.PointG1List
	6, // 5: pb.CryptoElement.EncSharesLists:type_name -> pb.EncShareList
	1, // 6: pb.CryptoElement.CommitteePKLists:type_name -> pb.PointG1
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pb_crypto_proto_init() }
func file_pb_crypto_proto_init() {
	if File_pb_crypto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_crypto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointG1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncShare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointG1List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncShareList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_crypto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CryptoElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_crypto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_crypto_proto_goTypes,
		DependencyIndexes: file_pb_crypto_proto_depIdxs,
		MessageInfos:      file_pb_crypto_proto_msgTypes,
	}.Build()
	File_pb_crypto_proto = out.File
	file_pb_crypto_proto_rawDesc = nil
	file_pb_crypto_proto_goTypes = nil
	file_pb_crypto_proto_depIdxs = nil
}
